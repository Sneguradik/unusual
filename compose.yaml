

services:
  postgres:
    image: postgres:latest
    container_name: unusual-postgres
    environment:
      POSTGRES_DB: maindb
      POSTGRES_USER: backend
      POSTGRES_PASSWORD: supersecret
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - unusual-net

  traefik:
    image: traefik:latest
    container_name: unusual-traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - unusual-net

  webapi:
    build:
      context: ./backend
      dockerfile: ./WebApi/Dockerfile
    container_name: unusual-webapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__MainDb=Host=postgres;Port=5432;Database=maindb;Username=backend;Password=supersecret
      - ConnectionStrings__SPBE=Host=172.30.2.4;Port=5432;Database=posttrade;Username=liquidity_dep;Password=Ld456Ld456
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/mapi`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=mapi-stripprefix"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      - "traefik.http.middlewares.mapi-stripprefix.stripprefix.prefixes=/mapi"
    networks:
      - unusual-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: unusual-frontend
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost/mapi
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=PathPrefix(`/`)"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
    depends_on:
      - webapi
    networks:
      - unusual-net

  poller:
    build:
      context: ./backend
      dockerfile: ./Poller/Dockerfile
    container_name: unusual-poller
    depends_on:
      - webapi
    networks:
      - unusual-net

networks:
  unusual-net:
    driver: bridge

volumes:
  postgres-data:
    name: unusual-postgres-volume
